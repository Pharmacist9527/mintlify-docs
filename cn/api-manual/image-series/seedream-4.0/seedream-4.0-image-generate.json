{
  "openapi": "3.1.0",
  "info": {
    "title": "doubao-seedream-4.0接口",
    "description": "使用AI模型创建图像任务，支持多种模型和参数配置",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.evolink.ai",
      "description": "生产环境"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/v1/images/generations": {
      "post": {
        "summary": "doubao-seedream-4.0接口",
        "description": "- 异步处理模式，返回任务ID用于后续查询\n- 支持文本转图片、图生图、图像编辑等多种生成模式。\n- 生成的图像链接，有效期为24小时，请尽快保存",
        "operationId": "createImageGeneration",
        "tags": [
          "图像生成"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageGenerationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "图像生成任务创建成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageGenerationResponse"
                }
              }
            }
          },
          "400": {
            "description": "请求参数错误",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 400,
                    "message": "Invalid request parameters",
                    "type": "invalid_request_error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "未认证、Token无效或过期",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 401,
                    "message": "Invalid or expired token",
                    "type": "authentication_error"
                  }
                }
              }
            }
          },
          "402": {
            "description": "配额不足、需要充值",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 402,
                    "message": "Insufficient quota",
                    "type": "insufficient_quota_error",
                    "fallback_suggestion": "https://evolink.ai/dashboard/billing"
                  }
                }
              }
            }
          },
          "403": {
            "description": "无权限访问",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 403,
                    "message": "Access denied for this model",
                    "type": "permission_error",
                    "param": "model"
                  }
                }
              }
            }
          },
          "404": {
            "description": "资源不存在",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 404,
                    "message": "Specified model not found",
                    "type": "not_found_error",
                    "param": "model",
                    "fallback_suggestion": "doubao-seedream-4.0"
                  }
                }
              }
            }
          },
          "413": {
            "description": "请求体过大",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 413,
                    "message": "Image file too large",
                    "type": "request_too_large_error",
                    "param": "image_urls",
                    "fallback_suggestion": "compress image to under 4MB"
                  }
                }
              }
            }
          },
          "429": {
            "description": "请求频率超限",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 429,
                    "message": "Rate limit exceeded",
                    "type": "rate_limit_error",
                    "fallback_suggestion": "retry after 60 seconds"
                  }
                }
              }
            }
          },
          "500": {
            "description": "服务器内部错误",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 500,
                    "message": "Internal server error",
                    "type": "internal_server_error",
                    "fallback_suggestion": "try again later"
                  }
                }
              }
            }
          },
          "502": {
            "description": "上游服务错误",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 502,
                    "message": "Upstream AI service unavailable",
                    "type": "upstream_error",
                    "fallback_suggestion": "try different model"
                  }
                }
              }
            }
          },
          "503": {
            "description": "服务暂时不可用",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 503,
                    "message": "Service temporarily unavailable",
                    "type": "service_unavailable_error",
                    "fallback_suggestion": "retry after 30 seconds"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ImageGenerationRequest": {
        "type": "object",
        "required": [
          "model",
          "prompt"
        ],
        "properties": {
          "model": {
            "type": "string",
            "description": "图像生成模型名称",
            "enum": [
              "doubao-seedream-4.0"
            ],
            "default":"doubao-seedream-4.0",
            "example": "doubao-seedream-4.0"
          },
          "prompt": {
            "type": "string",
            "description": "提示词，描述想要生成的图像，或描述如何编辑已输入的图像",
            "example": "一片宁静的湖水倒映着夕阳的美景",
            "maxLength": 1000
          },
          "n": {
            "type": "integer",
            "description": "规定生成图像的上限，支持`[1,15]`之间任意整数值\n\n**注意：**\n- 如需生成多图，请在提示词中加入: “ `生成2张不同的图片` ” 之类的提示词\n\n- 参考图像数量 + 最终生成图像数量 ≤ 15张\n\n- 如出现：参考图像数量 + 提示词内需要生成的图像数 > 15张，且提示词内 需要生成的图像数 ≤ 参数n的值，则 最终生成的图像数 = 15 - 参考图像数量\n- 单次请求会根据`n`的值进行预扣费，实际扣费以生成图像数量为准",
            "example": 1
          },
          "size": {
            "type": "string",
            "description": "生成图像的尺寸，支持两种格式：\n\n**简化格式：**\n- `1K`、`2K`、`4K`\n\n**像素格式：**\n- 宽度x高度，如：`1280x720`、`1024x1024`、`4096x4096`等在范围内的值\n- 总像素取值范围：`[1280x720, 4096x4096]`\n- 宽高比取值范围：`[1/16, 16]`",
            "example": "2048x2048"
          },
          "image_urls": {
            "type": "array",
            "description": "参考图像URL列表，用于图生图与图像编辑功能\n\n**注意：**\n- 单次请求支持输入图像数量：`10`张\n- 图像大小：不超过 `10MB`\n- 支持的图像格式：`.jpeg`、`.jpg`、`.png`\n- 宽高比（宽/高）范围：`[1/3, 3]`\n- 总像素：不超过 `6000×6000`\n- 图像URL需要服务器能直接查看，或者图像URL在访问时会直接进行下载（一般这种URL是以图像的扩展名作为结尾，例如`.png`、`.jpg`）",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "maxItems": 10,
            "example": [
              "https://example.com/image1.png",
              "https://example.com/image2.png"
            ]
          }
        }
      },
      "ImageGenerationResponse": {
        "type": "object",
        "properties": {
          "created": {
            "type": "integer",
            "description": "任务创建时间戳",
            "example": 1757165031
          },
          "id": {
            "type": "string",
            "description": "任务ID",
            "example": "task-unified-1757165031-seedream4d"
          },
          "model": {
            "type": "string",
            "description": "实际使用的模型名称",
            "example": "doubao-seedream-4.0"
          },
          "object": {
            "type": "string",
            "enum": [
              "image.generation.task"
            ],
            "description": "任务的具体类型"
          },
          "progress": {
            "type": "integer",
            "description": "任务进度百分比 (0-100)",
            "minimum": 0,
            "maximum": 100,
            "example": 0
          },
          "status": {
            "type": "string",
            "description": "任务状态",
            "enum": [
              "pending",
              "processing",
              "completed",
              "failed"
            ],
            "example": "pending"
          },
          "task_info": {
            "$ref": "#/components/schemas/TaskInfo",
            "description": "异步任务信息"
          },
          "type": {
            "type": "string",
            "enum": [
              "text",
              "image",
              "audio",
              "video"
            ],
            "description": "任务的输出类型",
            "example": "image"
          },
          "usage": {
            "$ref": "#/components/schemas/Usage",
            "description": "使用量和计费信息"
          }
        }
      },
      "TaskInfo": {
        "type": "object",
        "properties": {
          "can_cancel": {
            "type": "boolean",
            "description": "任务是否可以取消",
            "example": true
          },
          "estimated_time": {
            "type": "integer",
            "description": "预估完成时间（秒）",
            "minimum": 0,
            "example": 45
          }
        }
      },
      "Usage": {
        "type": "object",
        "description": "使用量和计费信息",
        "properties": {
          "billing_rule": {
            "type": "string",
            "description": "计费规则",
            "enum": ["per_call", "per_token", "per_second"],
            "example": "per_call"
          },
          "credits_reserved": {
            "type": "number",
            "description": "预估消耗积分数",
            "minimum": 0,
            "example": 1.8
          },
          "user_group": {
            "type": "string",
            "description": "用户组类别",
            "example": "default"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "integer",
                "description": "HTTP状态错误代码"
              },
              "message": {
                "type": "string",
                "description": "错误描述信息"
              },
              "type": {
                "type": "string",
                "description": "错误类型"
              },
              "param": {
                "type": "string",
                "description": "相关参数名称"
              },
              "fallback_suggestion": {
                "type": "string",
                "description": "错误时的建议"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "##所有接口均需要使用Bearer Token进行认证##\n\n**获取 API Key ：**\n\n访问 [API Key 管理页面](https://evolink.ai/dashboard/keys) 获取您的 API Key\n\n**使用时在请求头中添加：**\n```\nAuthorization: Bearer YOUR_API_KEY\n```"
      }
    }
  },
  "tags": [
    {
      "name": "图像生成",
      "description": "AI图像生成相关接口"
    }
  ]
}