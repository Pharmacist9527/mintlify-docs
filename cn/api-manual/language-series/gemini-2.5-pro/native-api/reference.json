{
  "openapi": "3.1.0",
  "info": {
    "title": "Gemini 原生 API - 完整参数文档",
    "description": "Google Gemini 原生 API 的完整参考文档，支持文本、图像、音频、视频等多模态输入",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.evolink.ai",
      "description": "生产环境"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/v1beta/models/gemini-2.5-pro:{method}": {
      "post": {
        "summary": "Gemini 内容生成",
        "description": "使用 Google 原生 API 格式调用 Gemini-2.5-pro 模型，支持以下功能：\n\n- **纯文本对话**：单轮或多轮上下文对话\n- **多模态输入**：支持文本 + 图像/音频/视频混合输入\n- **参数调优**：通过 generationConfig 控制生成效果\n- **流式/同步**：通过 method 参数选择生成方式",
        "operationId": "generateContent",
        "tags": [
          "内容生成"
        ],
        "parameters": [
          {
            "name": "method",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["generateContent", "streamGenerateContent"]
            },
            "description": "生成方法：\n- `generateContent`: 同步生成，一次性返回完整结果\n- `streamGenerateContent`: 流式生成，逐块实时返回内容",
            "example": "generateContent"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateContentRequest"
              },
              "examples": {
                "simple_text": {
                  "summary": "单轮纯文本对话",
                  "value": {
                    "contents": [
                      {
                        "role": "user",
                        "parts": [
                          {
                            "text": "解释一下量子纠缠"
                          }
                        ]
                      }
                    ]
                  }
                },
                "multi_turn": {
                  "summary": "多轮对话（上下文理解）",
                  "value": {
                    "contents": [
                      {
                        "role": "user",
                        "parts": [
                          {
                            "text": "什么是Python？"
                          }
                        ]
                      },
                      {
                        "role": "model",
                        "parts": [
                          {
                            "text": "Python是一种高级编程语言..."
                          }
                        ]
                      },
                      {
                        "role": "user",
                        "parts": [
                          {
                            "text": "它有什么优点？"
                          }
                        ]
                      }
                    ]
                  }
                },
                "audio_analysis": {
                  "summary": "音频分析",
                  "value": {
                    "contents": [
                      {
                        "role": "user",
                        "parts": [
                          {
                            "text": "请分析这段歌曲音频，回答以下问题：1. 歌曲来源和歌手来源 2. 歌曲情绪 3. 歌词完整输出"
                          },
                          {
                            "fileData": {
                              "mimeType": "audio/mpeg",
                              "fileUri": "https://example.com/audio.mp3"
                            }
                          }
                        ]
                      }
                    ],
                    "generationConfig": {
                      "temperature": 0.4,
                      "maxOutputTokens": 100
                    }
                  }
                },
                "image_understanding": {
                  "summary": "图像理解",
                  "value": {
                    "contents": [
                      {
                        "role": "user",
                        "parts": [
                          {
                            "text": "请详细描述这张图片中的场景和主要元素"
                          },
                          {
                            "fileData": {
                              "mimeType": "image/jpeg",
                              "fileUri": "https://example.com/image.jpg"
                            }
                          }
                        ]
                      }
                    ]
                  }
                },
                "multi_file": {
                  "summary": "多文件输入（混合）",
                  "value": {
                    "contents": [
                      {
                        "role": "user",
                        "parts": [
                          {
                            "text": "对比这两张图片和这段音频的内容关联性"
                          },
                          {
                            "fileData": {
                              "mimeType": "image/jpeg",
                              "fileUri": "https://example.com/image1.jpg"
                            }
                          },
                          {
                            "fileData": {
                              "mimeType": "image/png",
                              "fileUri": "https://example.com/image2.png"
                            }
                          },
                          {
                            "fileData": {
                              "mimeType": "audio/mpeg",
                              "fileUri": "https://example.com/audio.mp3"
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "内容生成成功\n\n**响应格式说明**：\n- 当 `method=generateContent` 时，返回 `GenerateContentResponse`（同步响应，一次性返回完整结果）\n- 当 `method=streamGenerateContent` 时，返回 `StreamGenerateContentResponse`（流式响应，逐块返回内容）",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GenerateContentResponse"
                    },
                    {
                      "$ref": "#/components/schemas/StreamGenerateContentResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "请求参数错误",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "未认证、Token无效或过期",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "402": {
            "description": "配额不足、需要充值",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "无权限访问",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "资源不存在",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "413": {
            "description": "请求体过大、文件过大",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "请求频率超限",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "服务器内部错误",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "上游服务错误",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "服务暂时不可用",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GenerateContentRequest": {
        "type": "object",
        "required": [
          "contents"
        ],
        "properties": {
          "contents": {
            "type": "array",
            "description": "对话内容列表，支持多轮对话和多模态输入",
            "items": {
              "$ref": "#/components/schemas/Content"
            },
            "minItems": 1
          },
          "generationConfig": {
            "$ref": "#/components/schemas/GenerationConfig",
            "description": "生成配置参数（可选）"
          }
        }
      },
      "Content": {
        "type": "object",
        "required": [
          "role",
          "parts"
        ],
        "properties": {
          "role": {
            "type": "string",
            "description": "内容角色\n\n- `user`: 用户输入\n- `model`: AI 模型的回复（用于多轮对话）",
            "enum": [
              "user",
              "model"
            ],
            "example": "user"
          },
          "parts": {
            "type": "array",
            "description": "内容片段列表，支持文本和文件数据",
            "items": {
              "$ref": "#/components/schemas/Part"
            },
            "minItems": 1
          }
        }
      },
      "Part": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/TextPart"
          },
          {
            "$ref": "#/components/schemas/FilePart"
          }
        ]
      },
      "TextPart": {
        "type": "object",
        "required": [
          "text"
        ],
        "properties": {
          "text": {
            "type": "string",
            "description": "文本内容",
            "example": "请分析这段音频"
          }
        }
      },
      "FilePart": {
        "type": "object",
        "required": [
          "fileData"
        ],
        "properties": {
          "fileData": {
            "type": "object",
            "required": [
              "mimeType",
              "fileUri"
            ],
            "properties": {
              "mimeType": {
                "type": "string",
                "description": "文件MIME类型\n\n**支持的类型**:\n\n**图像**:\n- `image/jpeg`, `image/png`, `image/webp`, `image/gif`\n- 单张最大: 20MB\n\n**音频**:\n- `audio/mpeg`, `audio/mp3`, `audio/wav`, `audio/aac`\n- 单个最大: 20MB\n- 时长建议: 不超过 9.5 小时\n\n**视频**:\n- `video/mp4`, `video/mpeg`, `video/mov`, `video/avi`, `video/webm`\n- 单个最大: 2GB\n- 时长建议: 不超过 1 小时\n\n**文档**:\n- `application/pdf`, `text/plain`\n- 单个最大: 20MB",
                "example": "audio/mpeg"
              },
              "fileUri": {
                "type": "string",
                "format": "uri",
                "description": "文件URI地址\n\n**要求**:\n- 必须是公网可访问的URL\n- URL应以文件扩展名结尾（如 .mp3, .jpg）",
                "example": "https://example.com/audio.mp3"
              }
            }
          }
        }
      },
      "GenerationConfig": {
        "type": "object",
        "description": "生成配置参数",
        "properties": {
          "temperature": {
            "type": "number",
            "description": "采样温度，控制输出的随机性\n\n**范围**: 0.0 - 2.0\n- 较低值(如 0.2): 更确定、更聚焦的输出\n- 较高值(如 1.5): 更随机、更有创意的输出\n- 默认值: 1.0",
            "minimum": 0,
            "maximum": 2,
            "default": 1.0,
            "example": 0.7
          },
          "maxOutputTokens": {
            "type": "integer",
            "description": "生成回复的最大 token 数量\n\n**说明**:\n- 不设置则使用模型默认值\n- 过小可能导致回复被截断",
            "minimum": 1,
            "example": 2000
          },
          "topP": {
            "type": "number",
            "description": "核采样(Nucleus Sampling)参数\n\n**范围**: 0.0 - 1.0\n- 控制从累积概率前多少的token中采样\n- 例如 0.9 表示从累积概率达到90%的token中选择\n- 默认值: 1.0（考虑所有token）\n\n**建议**: 不要同时调整 temperature 和 topP",
            "minimum": 0,
            "maximum": 1,
            "default": 1.0,
            "example": 0.9
          },
          "topK": {
            "type": "integer",
            "description": "Top-K 采样参数\n\n**说明**:\n- 限制每次采样时只考虑概率最高的 K 个 token\n- 较小的值会使输出更加聚焦\n- 默认值: 不限制",
            "minimum": 1,
            "example": 40
          }
        }
      },
      "GenerateContentResponse": {
        "type": "object",
        "properties": {
          "candidates": {
            "type": "array",
            "description": "候选响应列表",
            "items": {
              "$ref": "#/components/schemas/Candidate"
            }
          },
          "promptFeedback": {
            "$ref": "#/components/schemas/PromptFeedback"
          },
          "usageMetadata": {
            "$ref": "#/components/schemas/UsageMetadata"
          }
        }
      },
      "Candidate": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ContentResponse"
          },
          "finishReason": {
            "type": "string",
            "description": "完成原因\n\n- `STOP`: 正常完成\n- `MAX_TOKENS`: 达到最大token限制\n- `SAFETY`: 安全过滤\n- `RECITATION`: 检测到重复内容\n- `OTHER`: 其他原因",
            "enum": [
              "STOP",
              "MAX_TOKENS",
              "SAFETY",
              "RECITATION",
              "OTHER"
            ],
            "example": "STOP"
          },
          "index": {
            "type": "integer",
            "description": "候选索引",
            "example": 0
          },
          "safetyRatings": {
            "type": "array",
            "nullable": true,
            "description": "安全评分（如果启用）",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "ContentResponse": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "description": "响应角色",
            "enum": [
              "model"
            ],
            "example": "model"
          },
          "parts": {
            "type": "array",
            "description": "响应内容片段",
            "items": {
              "$ref": "#/components/schemas/TextPart"
            }
          }
        }
      },
      "PromptFeedback": {
        "type": "object",
        "properties": {
          "safetyRatings": {
            "type": "array",
            "nullable": true,
            "description": "提示词安全评分（如果启用）",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "UsageMetadata": {
        "type": "object",
        "description": "使用量统计信息",
        "properties": {
          "promptTokenCount": {
            "type": "integer",
            "description": "输入 token 数量",
            "example": 4
          },
          "candidatesTokenCount": {
            "type": "integer",
            "description": "生成 token 数量",
            "example": 611
          },
          "totalTokenCount": {
            "type": "integer",
            "description": "总 token 数量",
            "example": 2422
          },
          "thoughtsTokenCount": {
            "type": "integer",
            "description": "思考 token 数量（推理过程）",
            "example": 1807
          },
          "promptTokensDetails": {
            "type": "array",
            "description": "输入 token 详细信息",
            "items": {
              "type": "object",
              "properties": {
                "modality": {
                  "type": "string",
                  "description": "模态类型",
                  "enum": ["TEXT", "IMAGE", "AUDIO", "VIDEO"],
                  "example": "TEXT"
                },
                "tokenCount": {
                  "type": "integer",
                  "description": "该模态的 token 数量",
                  "example": 4
                }
              }
            }
          }
        }
      },
      "StreamGenerateContentResponse": {
        "type": "object",
        "description": "流式响应块\n\n**中间块**:\n```json\n{\n  \"candidates\": [\n    {\n      \"content\": {\n        \"role\": \"model\",\n        \"parts\": [{ \"text\": \"部分文本...\" }]\n      }\n    }\n  ],\n  \"usageMetadata\": {\n    \"trafficType\": \"ON_DEMAND\"\n  },\n  \"modelVersion\": \"gemini-2.5-pro\",\n  \"createTime\": \"2025-10-10T10:40:23.072315Z\",\n  \"responseId\": \"xxx\"\n}\n```\n\n**最后一块**:\n```json\n{\n  \"candidates\": [\n    {\n      \"content\": {\n        \"role\": \"model\",\n        \"parts\": [{ \"text\": \"最后的文本片段\" }]\n      },\n      \"finishReason\": \"STOP\"\n    }\n  ],\n  \"usageMetadata\": {\n    \"promptTokenCount\": 4,\n    \"candidatesTokenCount\": 522,\n    \"totalTokenCount\": 2191,\n    \"trafficType\": \"ON_DEMAND\"\n  },\n  \"modelVersion\": \"gemini-2.5-pro\",\n  \"createTime\": \"2025-10-10T10:40:23.072315Z\",\n  \"responseId\": \"xxx\"\n}\n```",
        "properties": {
          "candidates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Candidate"
            }
          },
          "usageMetadata": {
            "type": "object",
            "description": "使用量统计（最后一块才包含完整统计）"
          },
          "modelVersion": {
            "type": "string",
            "description": "模型版本",
            "example": "gemini-2.5-pro"
          },
          "createTime": {
            "type": "string",
            "format": "date-time",
            "description": "创建时间",
            "example": "2025-10-10T10:40:23.072315Z"
          },
          "responseId": {
            "type": "string",
            "description": "响应ID",
            "example": "l-LoaPu0BPmo1dkP6ZPHiQc"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "integer",
                "description": "HTTP状态错误代码"
              },
              "message": {
                "type": "string",
                "description": "错误描述信息"
              },
              "type": {
                "type": "string",
                "description": "错误类型"
              },
              "fallback_suggestion": {
                "type": "string",
                "description": "错误时的建议"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "##所有接口均需要使用Bearer Token进行认证##\n\n**获取 API Key :**\n\n访问 [API Key 管理页面](https://evolink.ai/dashboard/keys) 获取您的 API Key\n\n**使用时在请求头中添加:**\n```\nAuthorization: Bearer YOUR_API_KEY\n```"
      }
    }
  },
  "tags": [
    {
      "name": "内容生成",
      "description": "Gemini AI 内容生成相关接口"
    }
  ]
}
