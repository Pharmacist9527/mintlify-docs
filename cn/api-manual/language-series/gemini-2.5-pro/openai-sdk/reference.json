{
  "openapi": "3.1.0",
  "info": {
    "title": "Gemini-2.5-pro 完整参数文档",
    "description": "Gemini-2.5-pro 对话接口的完整 API 参考，包含所有参数和高级功能",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.evolink.ai",
      "description": "生产环境"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/v1/chat/completions": {
      "post": {
        "summary": "Gemini-2.5-pro 对话接口",
        "description": "- 同步处理模式，实时返回对话内容\n- **纯文本对话**：单轮或多轮上下文对话\n- **多模态输入**：支持文本 + 图像混合输入\n- **系统提示词**：自定义 AI 的角色和行为\n- **流式输出**：实时接收生成内容\n- **参数调优**：通过 temperature、top_p、top_k 控制生成效果",
        "operationId": "createChatCompletion",
        "tags": [
          "对话生成"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatCompletionRequest"
              },
              "examples": {
                "simple_text": {
                  "summary": "单轮文本对话",
                  "value": {
                    "model": "gemini-2.5-pro",
                    "messages": [
                      {
                        "role": "user",
                        "content": "解释一下量子纠缠"
                      }
                    ]
                  }
                },
                "multi_turn": {
                  "summary": "多轮对话（上下文理解）",
                  "value": {
                    "model": "gemini-2.5-pro",
                    "messages": [
                      {
                        "role": "user",
                        "content": "什么是Python？"
                      },
                      {
                        "role": "assistant",
                        "content": "Python是一种高级编程语言..."
                      },
                      {
                        "role": "user",
                        "content": "它有什么优点？"
                      }
                    ]
                  }
                },
                "system_prompt": {
                  "summary": "使用系统提示词",
                  "value": {
                    "model": "gemini-2.5-pro",
                    "messages": [
                      {
                        "role": "system",
                        "content": "你是一个专业的Python编程助手，用简洁的语言回答问题。"
                      },
                      {
                        "role": "user",
                        "content": "如何读取文件？"
                      }
                    ]
                  }
                },
                "vision": {
                  "summary": "多模态输入（文本 + 图像）",
                  "value": {
                    "model": "gemini-2.5-pro",
                    "messages": [
                      {
                        "role": "user",
                        "content": [
                          {
                            "type": "text",
                            "text": "请详细描述这张图片中的场景和主要元素。"
                          },
                          {
                            "type": "image_url",
                            "image_url": {
                              "url": "https://example.com/image.png"
                            }
                          }
                        ]
                      }
                    ]
                  }
                },
                "multi_image": {
                  "summary": "多图片输入",
                  "value": {
                    "model": "gemini-2.5-pro",
                    "messages": [
                      {
                        "role": "user",
                        "content": [
                          {
                            "type": "text",
                            "text": "对比这两张图片的区别"
                          },
                          {
                            "type": "image_url",
                            "image_url": {
                              "url": "https://example.com/image1.png"
                            }
                          },
                          {
                            "type": "image_url",
                            "image_url": {
                              "url": "https://example.com/image2.png"
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "对话生成成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatCompletionResponse"
                }
              }
            }
          },
          "400": {
            "description": "请求参数错误",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 400,
                    "message": "Invalid request parameters",
                    "type": "invalid_request_error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "未认证、Token无效或过期",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 401,
                    "message": "Invalid or expired token",
                    "type": "authentication_error"
                  }
                }
              }
            }
          },
          "402": {
            "description": "配额不足、需要充值",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 402,
                    "message": "Insufficient quota",
                    "type": "insufficient_quota_error",
                    "fallback_suggestion": "https://evolink.ai/dashboard/billing"
                  }
                }
              }
            }
          },
          "403": {
            "description": "无权限访问",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 403,
                    "message": "Access denied for this model",
                    "type": "permission_error",
                    "param": "model"
                  }
                }
              }
            }
          },
          "404": {
            "description": "资源不存在",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 404,
                    "message": "Specified model not found",
                    "type": "not_found_error",
                    "param": "model",
                    "fallback_suggestion": "gemini-2.5-pro"
                  }
                }
              }
            }
          },
          "413": {
            "description": "请求体过大",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 413,
                    "message": "Image file too large",
                    "type": "request_too_large_error",
                    "param": "content",
                    "fallback_suggestion": "compress image to under 10MB"
                  }
                }
              }
            }
          },
          "429": {
            "description": "请求频率超限",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 429,
                    "message": "Rate limit exceeded",
                    "type": "rate_limit_error",
                    "fallback_suggestion": "retry after 60 seconds"
                  }
                }
              }
            }
          },
          "500": {
            "description": "服务器内部错误",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 500,
                    "message": "Internal server error",
                    "type": "internal_server_error",
                    "fallback_suggestion": "try again later"
                  }
                }
              }
            }
          },
          "502": {
            "description": "上游服务错误",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 502,
                    "message": "Upstream AI service unavailable",
                    "type": "upstream_error",
                    "fallback_suggestion": "try different model"
                  }
                }
              }
            }
          },
          "503": {
            "description": "服务暂时不可用",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 503,
                    "message": "Service temporarily unavailable",
                    "type": "service_unavailable_error",
                    "fallback_suggestion": "retry after 30 seconds"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ChatCompletionRequest": {
        "type": "object",
        "required": [
          "model",
          "messages"
        ],
        "properties": {
          "model": {
            "type": "string",
            "description": "对话模型名称",
            "enum": [
              "gemini-2.5-pro"
            ],
            "default": "gemini-2.5-pro",
            "example": "gemini-2.5-pro"
          },
          "messages": {
            "type": "array",
            "description": "对话消息列表，支持多轮对话和多模态输入",
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "minItems": 1
          },
          "stream": {
            "type": "boolean",
            "description": "是否以流式方式返回响应\n\n- `true`: 流式返回，实时接收生成内容\n- `false`: 等待完整响应后一次性返回",
            "default": false,
            "example": false
          },
          "max_tokens": {
            "type": "integer",
            "description": "生成回复的最大 token 数量\n\n**说明**:\n- 不设置则使用模型默认值\n- 过小可能导致回复被截断",
            "minimum": 1,
            "example": 2000
          },
          "temperature": {
            "type": "number",
            "description": "采样温度，控制输出的随机性\n\n**范围**: 0.0 - 2.0\n- 较低值(如 0.2): 更确定、更聚焦的输出\n- 较高值(如 1.5): 更随机、更有创意的输出\n- 默认值: 1.0",
            "minimum": 0,
            "maximum": 2,
            "default": 1.0,
            "example": 0.7
          },
          "top_p": {
            "type": "number",
            "description": "核采样(Nucleus Sampling)参数\n\n**范围**: 0.0 - 1.0\n- 控制从累积概率前多少的token中采样\n- 例如 0.9 表示从累积概率达到90%的token中选择\n- 默认值: 1.0（考虑所有token）\n\n**建议**: 不要同时调整 temperature 和 top_p",
            "minimum": 0,
            "maximum": 1,
            "default": 1.0,
            "example": 0.9
          },
          "top_k": {
            "type": "integer",
            "description": "Top-K 采样参数\n\n**说明**:\n- 限制每次采样时只考虑概率最高的 K 个 token\n- 较小的值会使输出更加聚焦\n- 默认值: 不限制",
            "minimum": 1,
            "example": 40
          }
        }
      },
      "Message": {
        "type": "object",
        "required": [
          "role",
          "content"
        ],
        "properties": {
          "role": {
            "type": "string",
            "description": "消息角色\n\n- `user`: 用户消息\n- `assistant`: AI助手消息（用于多轮对话）\n- `system`: 系统提示词（设定AI的角色和行为）",
            "enum": [
              "user",
              "assistant",
              "system"
            ],
            "example": "user"
          },
          "content": {
            "oneOf": [
              {
                "type": "string",
                "description": "纯文本消息内容",
                "example": "你好，介绍一下自己"
              },
              {
                "type": "array",
                "description": "多模态内容数组（文本 + 图像）",
                "items": {
                  "$ref": "#/components/schemas/ContentPart"
                }
              }
            ],
            "description": "消息内容，支持纯文本或多模态数组"
          }
        }
      },
      "ContentPart": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/TextContent"
          },
          {
            "$ref": "#/components/schemas/ImageContent"
          }
        ]
      },
      "TextContent": {
        "type": "object",
        "required": [
          "type",
          "text"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "text"
            ],
            "description": "内容类型"
          },
          "text": {
            "type": "string",
            "description": "文本内容",
            "example": "请详细描述这张图片"
          }
        }
      },
      "ImageContent": {
        "type": "object",
        "required": [
          "type",
          "image_url"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "image_url"
            ],
            "description": "内容类型"
          },
          "image_url": {
            "type": "object",
            "required": [
              "url"
            ],
            "properties": {
              "url": {
                "type": "string",
                "format": "uri",
                "description": "图像URL地址\n\n**限制**:\n- 单次请求最多: `5` 张图片\n- 单张图片最大: `10MB`\n- 支持格式: `.jpeg`, `.jpg`, `.png`, `.webp`\n- URL要求: 必须公网可访问或以图片扩展名结尾",
                "example": "https://example.com/image.png"
              }
            }
          }
        }
      },
      "ChatCompletionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "对话完成的唯一标识符",
            "example": "chatcmpl-20251010015944503180122WJNB8Eid"
          },
          "model": {
            "type": "string",
            "description": "实际使用的模型名称",
            "example": "gemini-2.5-pro"
          },
          "object": {
            "type": "string",
            "enum": [
              "chat.completion"
            ],
            "description": "对象类型",
            "example": "chat.completion"
          },
          "created": {
            "type": "integer",
            "description": "创建时间戳",
            "example": 1760032810
          },
          "choices": {
            "type": "array",
            "description": "对话生成的选择列表",
            "items": {
              "$ref": "#/components/schemas/Choice"
            }
          },
          "usage": {
            "$ref": "#/components/schemas/Usage"
          }
        }
      },
      "Choice": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "description": "选择的索引",
            "example": 0
          },
          "message": {
            "$ref": "#/components/schemas/AssistantMessage"
          },
          "finish_reason": {
            "type": "string",
            "description": "完成原因\n\n- `stop`: 正常完成\n- `length`: 达到最大长度限制\n- `content_filter`: 内容被过滤",
            "enum": [
              "stop",
              "length",
              "content_filter"
            ],
            "example": "stop"
          }
        }
      },
      "AssistantMessage": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "description": "消息角色",
            "enum": [
              "assistant"
            ],
            "example": "assistant"
          },
          "content": {
            "type": "string",
            "description": "AI 回复的消息内容",
            "example": "你好！很高兴能向你介绍自己。\n\n我是一个大型语言模型（Large Language Model），由 Google 训练和开发。\n\n简单来说，你可以把我理解为一个经过海量文本数据训练、能够理解和生成人类语言的\"智能大脑\"。我的核心能力是处理和生成文本，具体来说，我能做以下这些事情：\n\n**1. 信息查询与知识解答**\n我可以像一部\"会说话的百科全书\"，为你解答各种问题，无论是科学知识、历史事件，还是生活常识。\n\n**2. 创意写作与文本生成**\n我可以根据你的要求，创作各种类型的文本，比如：\n*   **写作**：诗歌、故事、剧本、邮件、演讲稿、广告文案等。\n*   **规划**：为你制定旅行计划、学习大纲、活动方案等。\n*   **头脑风暴**：和你一起碰撞想法，激发新的创意。\n\n**3. 翻译与语言处理**\n我精通多种语言，可以为你提供快速、流畅的翻译服务。同时，我也可以帮你润色、校对、总结或改写文本，让你的表达更清晰、更专业。\n\n**4. 编程与代码辅助**\n我可以编写代码片段、解释代码逻辑、调试错误，或者将代码从一种编程语言\"翻译\"成另一种，是程序员的好帮手。\n\n**5. 逻辑分析与推理**\n我可以帮助你分析复杂的问题，梳理逻辑链条，并根据你提供的信息进行推理和总结。\n\n---\n\n**总而言之**，我的目标是成为一个强大而有用的工具，通过自然语言交流的方式，帮助你更高效地获取信息、完成任务和激发创意。\n\n**需要记住的是：** 我是一个人工智能，我的知识来源于我所学习的数据，并且可能不是最新的。有时我也可能会犯错，所以对于非常重要的信息，建议你进行再次核实。"
          }
        }
      },
      "Usage": {
        "type": "object",
        "description": "Token 使用统计信息",
        "properties": {
          "prompt_tokens": {
            "type": "integer",
            "description": "输入提示词的 token 数量",
            "example": 13
          },
          "completion_tokens": {
            "type": "integer",
            "description": "生成回复的 token 数量",
            "example": 1891
          },
          "total_tokens": {
            "type": "integer",
            "description": "总 token 数量",
            "example": 1904
          },
          "prompt_tokens_details": {
            "type": "object",
            "description": "输入 token 详细信息",
            "properties": {
              "cached_tokens": {
                "type": "integer",
                "description": "缓存的 token 数量",
                "example": 0
              },
              "text_tokens": {
                "type": "integer",
                "description": "文本 token 数量",
                "example": 13
              },
              "audio_tokens": {
                "type": "integer",
                "description": "音频 token 数量",
                "example": 0
              },
              "image_tokens": {
                "type": "integer",
                "description": "图像 token 数量",
                "example": 0
              }
            }
          },
          "completion_tokens_details": {
            "type": "object",
            "description": "完成 token 详细信息",
            "properties": {
              "text_tokens": {
                "type": "integer",
                "description": "文本 token 数量",
                "example": 0
              },
              "audio_tokens": {
                "type": "integer",
                "description": "音频 token 数量",
                "example": 0
              },
              "reasoning_tokens": {
                "type": "integer",
                "description": "推理 token 数量",
                "example": 1480
              }
            }
          },
          "input_tokens": {
            "type": "integer",
            "description": "输入 token 数量（兼容字段）",
            "example": 0
          },
          "output_tokens": {
            "type": "integer",
            "description": "输出 token 数量（兼容字段）",
            "example": 0
          },
          "input_tokens_details": {
            "type": "object",
            "nullable": true,
            "description": "输入 token 详细信息（兼容字段）",
            "example": null
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "integer",
                "description": "HTTP状态错误代码"
              },
              "message": {
                "type": "string",
                "description": "错误描述信息"
              },
              "type": {
                "type": "string",
                "description": "错误类型"
              },
              "param": {
                "type": "string",
                "description": "相关参数名称"
              },
              "fallback_suggestion": {
                "type": "string",
                "description": "错误时的建议"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "##所有接口均需要使用Bearer Token进行认证##\n\n**获取 API Key :**\n\n访问 [API Key 管理页面](https://evolink.ai/dashboard/keys) 获取您的 API Key\n\n**使用时在请求头中添加:**\n```\nAuthorization: Bearer YOUR_API_KEY\n```"
      }
    }
  },
  "tags": [
    {
      "name": "对话生成",
      "description": "AI对话生成相关接口"
    }
  ]
}
