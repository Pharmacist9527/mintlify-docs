{
  "openapi": "3.1.0",
  "info": {
    "title": "Get Task Detail API",
    "description": "Query the status, progress and result information of asynchronous tasks by task ID",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.evolink.ai",
      "description": "Production Environment"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/v1/tasks/{task_id}": {
      "get": {
        "summary": "Query task status",
        "description": "Query the status, progress and result information of asynchronous tasks by task ID",
        "operationId": "getTaskDetail",
        "tags": [
          "Task Management"
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Task ID",
            "example": "task-unified-1756817821-4x3rx6ny"
          }
        ],
        "responses": {
          "200": {
            "description": "Task status details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDetailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters„ÄÅFormat error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 400,
                    "message": "Invalid task ID format",
                    "type": "invalid_request_error",
                    "param": "task_id"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated, invalid or expired token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 401,
                    "message": "Invalid or expired token",
                    "type": "authentication_error"
                  }
                }
              }
            }
          },
          "402": {
            "description": "Insufficient quota, need to recharge",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 402,
                    "message": "Insufficient quota",
                    "type": "insufficient_quota_error",
                    "fallback_suggestion": "https://evolink.ai/dashboard/billing"
                  }
                }
              }
            }
          },
          "403": {
            "description": "No permission to access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 403,
                    "message": "Access denied",
                    "type": "permission_error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 404,
                    "message": "Task not found or expired",
                    "type": "not_found_error",
                    "param": "task_id"
                  }
                }
              }
            }
          },
          "429": {
            "description": "Request rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 429,
                    "message": "Rate limit exceeded",
                    "type": "rate_limit_error",
                    "fallback_suggestion": "retry after 60 seconds"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 500,
                    "message": "Internal server error",
                    "type": "internal_server_error",
                    "fallback_suggestion": "try again later"
                  }
                }
              }
            }
          },
          "502": {
            "description": "Upstream service error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 502,
                    "message": "Upstream service error",
                    "type": "upstream_error",
                    "fallback_suggestion": "try again later"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": 503,
                    "message": "Service temporarily unavailable",
                    "type": "service_unavailable_error",
                    "fallback_suggestion": "retry after 30 seconds"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TaskDetailResponse": {
        "type": "object",
        "required": [
          "id",
          "object",
          "created",
          "model",
          "type",
          "status",
          "progress"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Task ID",
            "example": "task-unified-1756817821-4x3rx6ny"
          },
          "object": {
            "type": "string",
            "description": "Object type",
            "example": "image.generation.task"
          },
          "created": {
            "type": "integer",
            "description": "Task creation timestamp",
            "example": 1756817821
          },
          "model": {
            "type": "string",
            "description": "Model used",
            "example": "gpt-4o-image"
          },
          "type": {
            "type": "string",
            "description": "Task type",
            "enum": [
              "image",
              "video",
              "audio",
              "text"
            ],
            "example": "image"
          },
          "status": {
            "type": "string",
            "description": "Task status",
            "enum": [
              "pending",
              "processing",
              "completed",
              "failed"
            ],
            "example": "completed"
          },
          "progress": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "description": "Task progress percentage",
            "example": 100
          },
          "results": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Task result list (provided when completed)",
            "example": [
              "https://tempfile.aiquickdraw.com/s/e61c0c32a44579bb447c9f47afbc013e_0_1756817912_8159.png"
            ]
          },
          "task_info": {
            "type": "object",
            "description": "Task detailed information",
            "properties": {
              "can_cancel": {
                "type": "boolean",
                "description": "Whether the task can be cancelled",
                "example": false
              }
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "integer",
                "description": "HTTP status error code",
                "example": 404
              },
              "message": {
                "type": "string",
                "description": "Error description",
                "example": "Task does not exist"
              },
              "type": {
                "type": "string",
                "description": "Error type",
                "example": "not_found_error"
              },
              "param": {
                "type": "string",
                "description": "Related parameter name",
                "example": "task_id"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "##All APIs require Bearer Token authentication##\n\n**Get API Key:**\n\nVisit [API Key management page](https://evolink.ai/dashboard/keys) get your API Key\n\n**Add to request headers when using:**\n```\nAuthorization: Bearer YOUR_API_KEY\n```\n\n**Notes:**\n\n- Please keep your API Key safe and do not disclose it to others\n- If you suspect API Key leakage, please reset it immediately on the management page"
      }
    }
  },
  "tags": [
    {
      "name": "Task Management",
      "description": "Asynchronous task management related APIs"
    }
  ]
}