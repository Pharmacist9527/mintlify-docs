{
  "openapi": "3.1.0",
  "info": {
    "title": "Video Generation API",
    "description": "Create video generation tasks using AI models, supporting text-to-video, image-to-video and other generation modes",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.evolink.ai",
      "description": "Production Environment"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/v1/videos/generations": {
      "post": {
        "summary": "Video Generation API",
        "description": "Submit video generation task, asynchronous processing mode, returns task ID for subsequent queries. Supports text-to-video, video first frame insertion and other generation modes.",
        "operationId": "createVideoGeneration",
        "tags": [
          "Video Generation"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoGenerationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Video generation task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoGenerationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated, invalid or expired token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "402": {
            "description": "Insufficient quota, need to recharge",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "No permission to access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "413": {
            "description": "Request body too large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Request rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Upstream service error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "VideoGenerationRequest": {
        "type": "object",
        "required": [
          "model",
          "prompt"
        ],
        "properties": {
          "model": {
            "type": "string",
            "description": "Name of the video generation model to use",
            "enum": [
              "veo3-fast"
            ],
            "example": "veo3-fast"
          },
          "prompt": {
            "type": "string",
            "description": "Video description prompt",
            "example": "A cat playing piano",
            "maxLength": 1000
          },
          "duration": {
            "type": "integer",
            "description": "Video duration (seconds)\n\n**Models and ranges supporting this parameter:** `Seedance`: 1s to 12s, must be integers",
            "default": 8,
            "example": 8
          },
          "aspect_ratio": {
            "type": "string",
            "description": "Video aspect ratio",
            "enum": [
              "16:9",
              "9:16",
              "1:1",
              "4:3",
              "3:4"
            ],
            "default": "16:9",
            "example": "16:9"
          },
          "image_urls": {
            "type": "array",
            "description": "Reference image URL list for image-to-video functionality\n\n**Limitations:**\n\n- Currently only supports 1 image\n- Supported file formats: `.jpg`, `.jpeg`, `.png`, `.webp`\n- Image size cannot exceed 10MB",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "maxItems": 1,
            "example": [
              "http://example.com/image1.jpg"
            ]
          },
          "seeds": {
            "type": "integer",
            "description": "Random seed parameter for controlling the randomness of generated content\n\n**Value range:** 10000-99999",
            "minimum": 10000,
            "maximum": 99999,
            "example": 12345
          },
          "enhance_prompt": {
            "type": "boolean",
            "description": "Whether to enable prompt enhancement, AI will automatically optimize your prompts",
            "default": true,
            "example": true
          }
        }
      },
      "VideoGenerationResponse": {
        "type": "object",
        "properties": {
          "created": {
            "type": "integer",
            "description": "Task creation timestamp",
            "example": 1699000000
          },
          "id": {
            "type": "string",
            "description": "Task ID",
            "example": "task-unified-999"
          },
          "model": {
            "type": "string",
            "description": "Actual model used name",
            "example": "runway-gen3"
          },
          "object": {
            "type": "string",
            "enum": [
              "video.generation.task"
            ],
            "description": "Specific type of task"
          },
          "progress": {
            "type": "integer",
            "description": "Task progress percentage (0-100)",
            "minimum": 0,
            "maximum": 100,
            "example": 0
          },
          "status": {
            "type": "string",
            "description": "Task status",
            "enum": [
              "pending",
              "processing",
              "completed",
              "failed"
            ],
            "example": "pending"
          },
          "task_info": {
            "$ref": "#/components/schemas/VideoTaskInfo",
            "description": "Video task detailed information"
          },
          "type": {
            "type": "string",
            "enum": [
              "text",
              "image",
              "audio",
              "video"
            ],
            "description": "Output type of task",
            "example": "video"
          },
          "usage": {
            "$ref": "#/components/schemas/VideoUsage",
            "description": "Credit usage information"
          }
        }
      },
      "VideoTaskInfo": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Video generation type",
            "enum": [
              "text2video",
              "image2video",
              "video2video"
            ],
            "example": "text2video"
          },
          "duration": {
            "type": "integer",
            "description": "Requested video duration (seconds)",
            "example": 5
          },
          "resolution": {
            "type": "string",
            "description": "Video resolution",
            "example": "1920x1080"
          },
          "fps": {
            "type": "integer",
            "description": "Video frame rate",
            "example": 24
          },
          "estimated_time": {
            "type": "integer",
            "description": "Estimated completion time (seconds)",
            "example": 300
          },
          "queue_position": {
            "type": "integer",
            "description": "Position in queue",
            "example": 10
          },
          "can_cancel": {
            "type": "boolean",
            "description": "Whether the task can be cancelled",
            "example": true
          }
        }
      },
      "VideoUsage": {
        "type": "object",
        "properties": {
          "credits_reserved": {
            "type": "integer",
            "description": "Reserved credit amount (charged per second)",
            "example": 5
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "integer",
                "description": "HTTP status error code"
              },
              "message": {
                "type": "string",
                "description": "Error description",
                "example": "Invalid request parameters"
              },
              "type": {
                "type": "string",
                "description": "Error type",
                "example": "invalid_request_error"
              },
              "param": {
                "type": "string",
                "description": "Related parameter name",
                "example": "model"
              },
              "fallback_suggestion": {
                "type": "string",
                "description": "Suggestion when error occurs",
                "example": "runway-gen3"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "##All APIs require Bearer Token authentication##\n\n**Get API Key:**\n\nVisit [API Key management page](https://evolink.ai/dashboard/keys) get your API Key\n\n**Add to request headers when using:**\n```\nAuthorization: Bearer YOUR_API_KEY\n```\n\n**Notes:**\n\n- Please keep your API Key safe and do not disclose it to others\n- If you suspect API Key leakage, please reset it immediately on the management page"
      }
    }
  },
  "tags": [
    {
      "name": "Video Generation",
      "description": "AI video generation related APIs"
    }
  ]
}